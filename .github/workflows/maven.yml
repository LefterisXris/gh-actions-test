# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven + Tests Artifact

on:
  push:
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    permissions: write-all
#      contents: read
#      pull-requests: write
#      packages: write
    strategy:
      matrix:
        java-version: [17]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

#    - name: Run Word Search Action
#      uses: ./.github/actions/word-search
#      with:
#        word: "EqualsAndHashCode.Exclude"
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven

    - name: Verify Java installation
      run: java -version

    # Caching Mechanism
#    - name: Cache local Maven repository
#      uses: actions/cache@v4
#      with:
#        path: ~/.m2/repository
#        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#        restore-keys: |
#          ${{ runner.os }}-maven-

    - name: Set Database Secrets
      run: |
        sed -i 's/##db.username##/${{ secrets.DB_USERNAME }}/g' src/main/resources/application.yaml
        sed -i 's/##db.password##/${{ secrets.DB_PASSWORD }}/g' src/main/resources/application.yaml

    - name: Build with Maven
      run: mvn -B -ntp clean install

    - name: Archive Test Reports
      if: always() # Always run even if the build fails
      uses: actions/upload-artifact@v4.4.0
      with:
        name: ${{ matrix.os }}-jdk_${{ matrix.java-version }}-test-reports
        path: target/surefire-reports/

    # Upload the JaCoCo code coverage report
    - name: Archive Code Coverage Report
      if: always()  # Run this step even if previous steps fail
      uses: actions/upload-artifact@v4.4.0
      with:
        name: ${{ matrix.os }}-jdk_${{ matrix.java-version }}-coverage-report
        path: target/site/jacoco/

    - name: Upload .jar artifacts
      uses: actions/upload-artifact@v4.4.0
      with:
        name: app-executables
        path: target/*.jar

      # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: docker build -t ghcr.io/lefterisxris/gh_actions_test:latest .

    # Push Docker images to GitHub Container Registry
    - name: Push Docker image to GHCR
      run: docker push ghcr.io/lefterisxris/gh_actions_test:latest

    - name: Add coverage to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.7.1
      with:
        paths: |
          target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 70
        min-coverage-changed-files: 90
        title: '# :lobster: Coverage Report'
        pass-emoji: ':green_circle:'
        fail-emoji: ':red_circle:'

    - name: Get the Coverage info
      run: |
        echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
        echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"

    - name: Fail PR if overall coverage is less than 70%
      if: ${{ github.event_name == 'pull_request' && steps.jacoco.outputs.coverage-overall < 70.0 }}
      uses: actions/github-script@v7.0.1
      with:
        script: |
          core.setFailed('Overall coverage is less than 70%!')

    - name: Print events
      run: |
        echo "Event Name: ${{ github.event_name }}"
        echo "Event Action: ${{ github.event.action }}"
        echo "Event PullRequest Merged: ${{ github.event.pull_request.merged }}"


  # Second Job: Create Draft Release
  draftReleaseJob:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: build
    permissions: write-all
    if: github.event_name == 'push' && startsWith(github.event.head_commit.message, 'Merge pull request')
    # Could also be as below, if workflow is triggered only on pr events:
    # if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: app-executables
          path: ./downloads

      - name: Create Draft Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          files: ./downloads/**
          name: "Draft release after so much good work!"
          body: |
            # The anticipated Release is here! :lobster:
            
            ## Changelog:
            - Feature 1: Added support for X
            - Feature 2: Improved performance for Y
            - Bugfix: Resolved issue with Z
            
            Thank you for your contributions!
          draft: true
          tag_name: ${{ github.sha }}
